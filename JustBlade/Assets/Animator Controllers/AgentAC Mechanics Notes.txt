=> These are some notes regarding how the AgentAC is structured.
=> The whole point of this document is the "Transition and animation speed details" part further down.
=> However, to keep things somewhat readable, I also wrote down some Miscellaneous notes.



****************************** Miscellaneous notes ******************************
=> Base Layer is where the movement animations play. When the agent is not attacking, Base Layer controls the whole body.
However, if the agent starts attacking, then Base Layer will lose control of some of the bones in the skeleton.
Those bones will be controlled by the AttackAndBlockLayer (or whatever else), but Base Layer will still control the rest
of the bones (most likely pelvis bone and its children).
=> AttackAndBlockLayer is where the attack and defend (aka: block) animations play out.
=> In this game, "def" has higher precedence than "atk", which explains the reason why the transition conditions
of "atk" and "def" states were set up the way they are.
=> "No exit time means" you don't have to wait for the animation to finish (before you transition to the next one).
=> combatDir is used to choose the desired combat direction for your attacks (atk) and blocks (def).
The following convention will be used for all directions:
	- combatDir=0 means up
	- combatDir=1 means right
	- combatDir=2 means down
	- combatDir=3 means left



****************************** Transition and animation speed details ******************************

=> IMPORTANT: All transitions are fixed durations, measured in seconds.
=> IMPORTANT: The playback speed of all animations is 60 frames per second.



******************** Attack ********************
=> Any transition which goes to any kind of "atk_hold" animation is considered to be "Attack Windup".
=> Any "atk_release" animation is considered to be "Attack Release".
=> Any transition which goes from any kind of "atk_release" to "idle" is considered to be "Attack Release Recovery".
=> Any transition which goes from any kind of "atk_bounced" to "idle" is considered to be "Attack Bounced Recovery".


----- Attack Transitions -----
=> Attack Windup transition times are 0.66 for swings, and 1.0 for stabs.
=> Both of the Attack Release Recovery and Attack Bounced Recovery times are the same for swings and stabs:
	- For swings, the times are 0.66.
	- For stabs, the times are 0.33. This is to account for the slower windup time for stab attacks.


----- Attack Animations -----
=> Attack Release animation speed will not be touched.
All attack animations are 40 frames long, so that means 0.66 seconds. That's good enough for me.



******************** Defend ********************
=> Any transition which goes to any kind of "def_hold" animation is considered to be "Defend Windup".
=> Any transition which goes from any kind of "def_hold" to "idle" is considered to be "Defend Release".
=> Any "def_blocked" animation is considered to be "Defend Blocked".
=> Any transition which goes from any kind of "def_blocked" to "idle" OR "def_hold" is considered
to be "Defend Blocked Recovery".


----- Defend Transitions -----
=> Good news! Any kind of transition duration will be 0.2 seconds no matter what.
This is to make sure that blocking is faster than attacks, so that the agents don't get spammed by attacks.


----- Defend Animations -----
=> By default, all Defend Blocked animations are 25 frames long, so that means roughly 0.416 seconds.
=> To make sure defending is more responsive, all Defend Blocked animations will have a HARDCODED multiplier of 4.0.
This means that Defend Blocked animations will last roughly 0.104 seconds.


